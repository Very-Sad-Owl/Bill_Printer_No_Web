
plugins {
    id 'java'
    id 'maven-publish'
    id "io.freefair.lombok" version "5.3.0"
    id 'io.freefair.aspectj.post-compile-weaving' version '5.3.0'
}

group = "ru.clevertec.tasks.olga"
version = '1.0-SNAPSHOT'
description = 'billPinterNoWeb'
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}

dependencies {

    implementation 'com.epam.training.jwd:JWD_Task03:1.0-SNAPSHOT'
    implementation 'ru.clevertec.tasks.olga.custom_collection:my_list:1.1-SNAPSHOT'
    implementation 'org.apache.logging.log4j:log4j-slf4j18-impl:2.17.0'
    implementation 'org.decimal4j:decimal4j:1.0.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.21'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    implementation group: 'com.google.guava', name: 'guava', version: '11.0.2'

//Aspect
    implementation group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.6'
    implementation group: 'org.aspectj', name: 'aspectjrt', version: '1.9.6'
// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'



    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.3.1'
    testImplementation 'org.assertj:assertj-core:3.22.0'

}

//sourceSets {
//    aspects {
//        java {
//            srcDir 'src/aspects/aspectj'
//            include '**/*.java'
//            compileClasspath = sourceSets.main.compileClasspath
//            runtimeClasspath = sourceSets.main.runtimeClasspath
//        }
//    }
//}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

